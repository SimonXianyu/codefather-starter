<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <bean id="propertyConfiguror" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="properties" ref="propConfig"/>
  </bean>

  <!--  responsebody bug fix -->
  <mvc:annotation-driven>
    <mvc:message-converters>
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>text/plain;charset=UTF-8</value>
            <value>text/html;charset=UTF-8</value>
            <value>application/json;charset=UTF-8</value>
          </list>
        </property>
      </bean>
      <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <!--<property name="objectMapper" ref="customObjectMapper"/>-->
        <property name="supportedMediaTypes">
          <list>
            <value>application/json;charset=UTF-8</value>
            <value>application/x-www-form-urlencoded;charset=UTF-8</value>
          </list>
        </property>
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven>

  <mvc:interceptors>
    <!--<bean class="io.github.simonxianyu.util.menu.MenuBarInterceptor">-->
    <!--<property name="menuBarSource" ref="menuSource" />-->
    <!--<property name="ignorePaths" value="/loginform" />-->
    <!--</bean>-->
    <ref bean="funcInterceptor"/>
    <ref bean="casInterceptor" />
  </mvc:interceptors>

  <bean id="funcInterceptor" class="io.github.simonxianyu.util.spring.FuncInterceptor">
  </bean>
  <bean id="casInterceptor" class="ca.paypos.iam.admin.util.shiro.CasInterceptor" />

  <context:component-scan base-package="ca.paypos.iam.admin.ctl,ca.paypos.iam.admin.mctl"/>

  <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    <property name="interceptors">
      <list>
        <ref bean="funcInterceptor"/>
        <ref bean="casInterceptor" />
      </list>
    </property>
  </bean>

  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    <!-- one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize" value="9999999999"/>
  </bean>

  <bean id="freeMarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/WEB-INF/ftl"/>
    <property name="defaultEncoding" value="UTF-8"/>
    <property name="freemarkerSettings">
      <props>
        <prop key="template_update_delay">0</prop>
        <prop key="number_format">0.###</prop>
        <!--<prop key="template_exception_handler"></prop>-->
      </props>
    </property>
  </bean>

  <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="viewResolvers">
      <list>
        <ref bean="jspViewResolver" />
        <ref bean="layoutViewResolver"/>
      </list>
    </property>
  </bean>

  <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView" />
    <property name="viewNames" value="*.jsp" />
    <property name="prefix" value="/WEB-INF" />
  </bean>

  <bean id="layoutViewResolver"
        class="io.github.simonxianyu.util.spring.FreemarkerLayoutViewResolver">
    <property name="extraPageBeans">
      <map>
        <entry key="webConfig" value-ref="webConfig"/>
        <!--<entry key="menuSource" value-ref="menuSource" />-->
      </map>
    </property>
    <property name="viewClass"
              value="io.github.simonxianyu.util.spring.MyFreeMarkerView"/>
    <!--value="org.springframework.web.servlet.view.JstlView"/>-->
    <property name="contentType" value="text/html;charset=UTF-8"/>
    <property name="defaultLayout" value="layouts/default"/>
    <property name="requestContextAttribute" value="request"/>
    <property name="layoutMapping">
      <map>
        <entry key="index" value="none"/>
        <entry key="loginform" value="none"/>
        <entry key="error404" value="none"/>
        <entry key="error500" value="none"/>

        <entry key="error/**" value="layouts/error"/>

        <entry key="**/aj_*" value="none"/>

        <entry key="weixin/**" value="none"/>
        <entry key="weixin/member/**" value="layouts/registerLayout"/>

        <entry key="api/**" value="none"/>

        <entry key="uncaughtException" value="none"/>
        <entry key="menu/reload" value="none"/>

      </map>
    </property>
    <property name="prefix" value="/"/>
    <property name="suffix" value=".ftl"/>
  </bean>

  <!-- 将Controller抛出的异常转到特定View -->
  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="org.apache.shiro.authz.UnauthorizedException">error/not-authorized</prop>
        <prop key="java.lang.Throwable">error/500</prop>
      </props>
    </property>
  </bean>

  <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="useCodeAsDefaultMessage" value="true"/>
    <property name="basenames">
      <list>
        <value>WEB-INF/messages/common</value>
        <value>WEB-INF/messages/menu</value>
        <value>WEB-INF/messages/messages</value>
      </list>
    </property>
  </bean>

  <bean id="funcCollector" class="io.github.simonxianyu.util.mongo.FuncPostProcessor">

  </bean>


</beans>